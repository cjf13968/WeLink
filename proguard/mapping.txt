a -> a:
    com.baidu.cloudsdk.common.http.AsyncHttpClient a -> a
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
aa -> b:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.social.core.SessionManager$Session,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.common.http.MultipartRequestParams,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(aa,com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.common.http.MultipartRequestParams,com.baidu.cloudsdk.IBaiduListener) -> a
aa$a -> c:
    android.net.Uri b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    aa a -> a
    void onComplete(java.io.ByteArrayOutputStream) -> a
aa$b -> d:
    android.net.Uri b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    aa a -> a
    void onComplete(android.graphics.Bitmap) -> a
aa$c -> e:
    com.baidu.cloudsdk.social.share.ShareContent b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    aa a -> a
    void onComplete(android.location.Location) -> a
ab -> f:
    com.baidu.cloudsdk.social.share.ShareContent a -> a
    boolean b -> b
    aa c -> c
    void onComplete() -> a
ac -> g:
    android.app.Activity g -> g
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(int,int,android.content.Intent) -> a
ad -> h:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    com.baidu.cloudsdk.social.share.ShareContent d -> d
    com.baidu.cloudsdk.IBaiduListener e -> e
    com.baidu.cloudsdk.social.restapi.SocialRestAPIImpl f -> f
    android.util.SparseArray g -> g
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent) -> a
    void a(int,int,android.content.Intent) -> a
    void a(java.lang.String,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(int,com.baidu.cloudsdk.IBaiduListener) -> a
    com.baidu.cloudsdk.IBaiduListener a(int) -> a
    void a(ad,com.baidu.cloudsdk.social.share.ShareContent) -> a
ae -> i:
    com.baidu.cloudsdk.social.share.ShareContent a -> a
    ad b -> b
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,java.lang.String) -> a
af -> j:
    android.app.Activity g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(int,int,android.content.Intent) -> a
    boolean b() -> b
    void a(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener) -> a
    void c() -> c
    java.lang.String a(android.graphics.Bitmap) -> a
    void b(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener) -> b
    java.lang.String a(com.baidu.cloudsdk.social.share.ShareContent) -> a
    java.lang.String b(com.baidu.cloudsdk.social.share.ShareContent) -> b
    com.baidu.cloudsdk.IBaiduListener a() -> a
    java.lang.String a(af,android.graphics.Bitmap) -> a
    void a(af) -> a
af$1 -> k:
af$a -> l:
    af a -> a
    void onComplete(android.graphics.Bitmap) -> a
ag -> m:
    android.app.Activity g -> g
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(int,int,android.content.Intent) -> a
ah -> n:
    java.lang.String a -> a
    ah b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    ah a(android.content.Context) -> a
    void a(com.baidu.cloudsdk.social.core.MediaType,com.baidu.cloudsdk.social.share.ShareContent) -> a
    void a(java.lang.String,com.baidu.cloudsdk.social.share.ShareContent) -> a
    void a(java.lang.String,java.lang.String,com.baidu.cloudsdk.BaiduAPIResponseHandler) -> a
aj -> o:
    java.lang.String a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    boolean f -> f
    com.baidu.cloudsdk.social.core.util.Weixin g -> g
    java.lang.String h -> h
    com.baidu.cloudsdk.IBaiduListener a(java.lang.String) -> a
    void a(java.lang.String,com.baidu.cloudsdk.IBaiduListener) -> a
    com.baidu.cloudsdk.social.share.ShareContent b(java.lang.String) -> b
    void a(java.lang.String,com.baidu.cloudsdk.social.share.ShareContent) -> a
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.net.Uri,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.os.Bundle) -> a
    java.lang.String b() -> b
    int a(android.graphics.Bitmap,int) -> a
    void a(aj,com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener) -> a
    int a(aj,android.graphics.Bitmap,int) -> a
    void a(aj,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    java.lang.String a(aj) -> a
aj$a -> p:
    android.net.Uri b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    aj a -> a
    void onComplete(android.graphics.Bitmap) -> a
ak -> q:
    com.baidu.cloudsdk.social.share.ShareContent a -> a
    com.baidu.cloudsdk.IBaiduListener b -> b
    aj c -> c
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,java.lang.String) -> a
al -> r:
    boolean a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Rect d -> d
    boolean a() -> a
    void a(boolean) -> a
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    boolean performClick() -> performClick
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Rect a(android.graphics.Canvas) -> a
am -> s:
    android.view.View$OnClickListener a -> a
    com.baidu.cloudsdk.social.share.SocialShareConfig b -> b
    void a(android.view.View$OnClickListener) -> a
    void a() -> a
    void b() -> b
    void c() -> c
an -> t:
    android.view.View$OnClickListener a -> a
    com.baidu.cloudsdk.social.share.SocialShareConfig b -> b
    void a(android.view.View$OnClickListener) -> a
    void c() -> c
    void a() -> a
    void b() -> b
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bk:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.s:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.t:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.v:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.y:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
ao -> u:
    java.lang.String a -> a
    android.widget.ImageView b -> b
    android.widget.TextView c -> c
    android.widget.ImageView d -> d
    boolean e -> e
    android.content.Context f -> f
    com.baidu.cloudsdk.social.share.SocialShareConfig g -> g
    java.lang.String h -> h
    android.location.Location i -> i
    void a(boolean) -> a
    boolean a() -> a
    android.location.Location b() -> b
    boolean performClick() -> performClick
    void b(android.location.Location) -> b
    void a(android.location.Location) -> a
    java.lang.String c() -> c
    java.lang.String a(ao,java.lang.String) -> a
    java.lang.String a(ao) -> a
    android.widget.TextView b(ao) -> b
    android.location.Location a(ao,android.location.Location) -> a
    void b(ao,android.location.Location) -> b
ao$a -> v:
    ao a -> a
    void onComplete(android.location.Location) -> a
ap -> w:
    ao a -> a
    void onComplete(org.json.JSONObject) -> a
aq -> x:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
ar -> y:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
as -> z:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
at -> aa:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
au -> ab:
    java.lang.String a -> a
    java.util.List b -> b
    android.content.Context c -> c
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog d -> d
    com.baidu.cloudsdk.social.oauth.SocialConfig e -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(java.lang.String,boolean) -> a
    void a(ay) -> a
    ay a(java.lang.String) -> a
    android.content.Context a(au) -> a
    com.baidu.cloudsdk.social.oauth.SocialConfig b(au) -> b
    java.util.List c(au) -> c
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog d(au) -> d
    void a(au,java.lang.String,boolean) -> a
    java.lang.String a() -> a
au$a -> ac:
    android.widget.ImageView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    bb d -> d
    android.widget.ImageView a(au$a,android.widget.ImageView) -> a
    android.widget.ImageView a(au$a) -> a
    android.widget.TextView a(au$a,android.widget.TextView) -> a
    android.widget.TextView b(au$a) -> b
    android.widget.TextView b(au$a,android.widget.TextView) -> b
    android.widget.TextView c(au$a) -> c
    bb a(au$a,bb) -> a
    bb d(au$a) -> d
av -> ad:
    au$a a -> a
    au b -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
aw -> ae:
    java.lang.String a -> a
    av b -> b
    void onComplete() -> a
    void onCancel() -> b
    void onError(com.baidu.cloudsdk.BaiduException) -> a
ax -> af:
    ay a -> a
    au b -> b
    void onComplete(org.json.JSONObject) -> a
ay -> ag:
    com.baidu.cloudsdk.social.core.MediaType a -> a
    int d -> d
    boolean e -> e
    boolean b -> b
    java.lang.String c -> c
    int a() -> a
    void a(boolean) -> a
    boolean b() -> b
az -> ah:
    android.view.View a(android.content.Context,com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle,android.view.View$OnClickListener) -> a
az$1 -> ai:
    int[] a -> a
b -> aj:
    com.baidu.cloudsdk.common.http.AsyncHttpClient a -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
ba -> ak:
    com.baidu.cloudsdk.social.share.ShareContent a -> a
    com.baidu.cloudsdk.IBaiduListener b -> b
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle c -> c
    com.baidu.cloudsdk.social.share.SocialShare d -> d
    ba a(com.baidu.cloudsdk.social.share.SocialShare) -> a
    ba a(com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle) -> a
    android.content.Context a() -> a
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle b() -> b
    ba a(com.baidu.cloudsdk.social.share.ShareContent) -> a
    ba a(com.baidu.cloudsdk.IBaiduListener) -> a
    void onClick(android.view.View) -> onClick
bb -> al:
    android.graphics.Paint a -> a
    android.view.ViewParent b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.RectF i -> i
    android.graphics.PorterDuffXfermode j -> j
    float k -> k
    float l -> l
    float m -> m
    float n -> n
    float o -> o
    float p -> p
    float q -> q
    float r -> r
    float s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    boolean x -> x
    boolean y -> y
    boolean z -> z
    bb$b A -> A
    android.widget.CompoundButton$OnCheckedChangeListener B -> B
    android.widget.CompoundButton$OnCheckedChangeListener C -> C
    boolean D -> D
    float E -> E
    float F -> F
    float G -> G
    float H -> H
    com.baidu.cloudsdk.social.share.SocialShareConfig I -> I
    void a(android.content.Context) -> a
    void setEnabled(boolean) -> setEnabled
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    void a(boolean) -> a
    void setChecked(boolean) -> setChecked
    void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performClick() -> performClick
    void a() -> a
    float a(float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void b(boolean) -> b
    void b() -> b
    void c() -> c
    void b(float) -> b
    boolean a(bb) -> a
    void b(bb) -> b
bb$a -> am:
    android.os.Handler a -> a
    void a(java.lang.Runnable) -> a
bb$a$a -> an:
    void handleMessage(android.os.Message) -> handleMessage
bb$b -> ao:
    bb a -> a
    void run() -> run
bb$c -> ap:
    bb a -> a
    void run() -> run
bc -> aq:
    boolean a -> a
    bb b -> b
    void run() -> run
c -> ar:
    com.baidu.cloudsdk.common.http.AsyncHttpClient a -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.baidu.android.bba.common.security.AESUtil -> com.baidu.a.a.a.a.a:
    byte[] encrypt(java.lang.String,java.lang.String,byte[]) -> a
    byte[] decrypt(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bba.common.security.Base64 -> com.baidu.a.a.a.a.b:
    byte[] a -> a
    byte[] decode(byte[]) -> a
    byte[] decode(byte[],int) -> a
    java.lang.String encode(byte[],java.lang.String) -> a
com.baidu.android.bba.common.security.MD5Util -> com.baidu.a.a.a.a.c:
    java.lang.String toMd5(byte[],boolean) -> a
    java.lang.String toHexString(byte[],java.lang.String,boolean) -> a
com.baidu.android.bba.common.util.CommonParam -> com.baidu.a.a.a.b.a:
    java.lang.String a -> a
    java.lang.String getCUID(android.content.Context) -> a
    java.lang.String a(android.content.Context) -> b
com.baidu.android.bba.common.util.DeviceId -> com.baidu.a.a.a.b.b:
    java.lang.String getDeviceID(android.content.Context) -> a
    java.lang.String getIMEI(android.content.Context) -> b
    java.lang.String getAndroidId(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bba.common.util.DeviceId$a -> com.baidu.a.a.a.b.c:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bba.common.util.DeviceId$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.cloudsdk.BaiduAPIResponseHandler -> com.baidu.cloudsdk.a:
    java.lang.String mUrl -> d
    com.baidu.cloudsdk.IBaiduListener mListener -> e
    void onSuccess(org.json.JSONArray) -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,java.lang.String) -> a
com.baidu.cloudsdk.BaiduException -> com.baidu.cloudsdk.b:
    int a -> a
    int getErrorCode() -> a
com.baidu.cloudsdk.Build -> com.baidu.cloudsdk.c:
    boolean DEBUG -> a
com.baidu.cloudsdk.DefaultBaiduListener -> com.baidu.cloudsdk.d:
    com.baidu.cloudsdk.IBaiduListener mListener -> d
    void onComplete() -> a
    void onComplete(org.json.JSONObject) -> a
    void onComplete(org.json.JSONArray) -> a
    void onCancel() -> b
    void onError(com.baidu.cloudsdk.BaiduException) -> a
com.baidu.cloudsdk.IBaiduListener -> com.baidu.cloudsdk.e:
    void onComplete() -> a
    void onComplete(org.json.JSONObject) -> a
    void onComplete(org.json.JSONArray) -> a
    void onCancel() -> b
    void onError(com.baidu.cloudsdk.BaiduException) -> a
com.baidu.cloudsdk.ProxyActivityListener -> com.baidu.cloudsdk.f:
    android.app.Activity a -> a
    com.baidu.cloudsdk.IBaiduListener b -> b
    void onError(com.baidu.cloudsdk.BaiduException) -> a
    void onComplete() -> a
    void onComplete(org.json.JSONArray) -> a
    void onComplete(org.json.JSONObject) -> a
    void onCancel() -> b
com.baidu.cloudsdk.assets.AssetFileUtils -> com.baidu.cloudsdk.a.a:
    java.io.InputStream getFileAsStream(android.content.Context,java.lang.String) -> a
    java.lang.String getFileContent(android.content.Context,java.lang.String) -> b
com.baidu.cloudsdk.assets.DrawableUtils -> com.baidu.cloudsdk.a.b:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> a
    int fix720px(android.content.Context,int) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> b
    android.graphics.Rect a(byte[]) -> a
com.baidu.cloudsdk.common.http.AsyncHttpClient -> com.baidu.cloudsdk.b.a.a:
    java.util.concurrent.ThreadPoolExecutor sThreadPool -> a
    long mLastCheckTime -> b
    int mNetworkCheckInterval -> c
    java.util.WeakHashMap mRequestMap -> d
    void finalize() -> finalize
    void get(android.content.Context,java.lang.String,com.baidu.cloudsdk.common.http.RequestParams,com.baidu.cloudsdk.common.http.HttpResponseHandler) -> a
    void get(android.content.Context,java.lang.String,com.baidu.cloudsdk.common.http.RequestParams,org.apache.http.Header[],com.baidu.cloudsdk.common.http.HttpResponseHandler) -> a
    void post(android.content.Context,java.lang.String,com.baidu.cloudsdk.common.http.RequestParams,com.baidu.cloudsdk.common.http.HttpResponseHandler) -> b
    void post(android.content.Context,java.lang.String,com.baidu.cloudsdk.common.http.RequestParams,org.apache.http.Header[],com.baidu.cloudsdk.common.http.HttpResponseHandler) -> b
    void cancelRequests(android.content.Context,boolean) -> a
    java.lang.String getUrlWithQueryString(java.lang.String,com.baidu.cloudsdk.common.http.RequestParams) -> a
    void sendRequest(org.apache.http.client.methods.HttpUriRequest,com.baidu.cloudsdk.common.http.HttpResponseHandler,android.content.Context) -> a
    void a(android.content.Context) -> a
com.baidu.cloudsdk.common.http.AsyncHttpClient$a -> com.baidu.cloudsdk.b.a.b:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.baidu.cloudsdk.common.http.BinaryHttpResponseHandler -> com.baidu.cloudsdk.b.a.c:
    java.lang.String[] a -> a
    void onFailure(java.lang.Throwable,byte[]) -> a
    void onSuccess(byte[]) -> a
    void onSuccess(int,byte[]) -> a
    void sendSuccessMessage(int,byte[]) -> b
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void handleSuccessMessage(int,byte[]) -> c
    void handleFailureMessage(java.lang.Throwable,byte[]) -> b
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.cloudsdk.common.http.ConnectManager -> com.baidu.cloudsdk.b.a.d:
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    boolean isWapNetwork() -> a
    java.lang.String getProxy() -> b
    int getProxyPort() -> c
    void a(android.content.Context) -> a
    void a(android.content.Context,android.net.NetworkInfo) -> a
com.baidu.cloudsdk.common.http.ConnectManager$NetworkType -> com.baidu.cloudsdk.b.a.e:
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType UNAVAIL -> a
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType WIFI -> b
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType MOBILE -> c
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType[] a -> d
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType[] values() -> values
    com.baidu.cloudsdk.common.http.ConnectManager$NetworkType valueOf(java.lang.String) -> valueOf
com.baidu.cloudsdk.common.http.HttpResponseHandler -> com.baidu.cloudsdk.b.a.f:
    java.lang.String mDefaultCharset -> f
    void onStart() -> a
    void onFinish() -> b
    void onFailure(java.lang.Throwable,java.lang.String) -> a
    void onSuccess(java.lang.String) -> a
    void onSuccess(int,java.lang.String) -> a
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void sendFailureMessage(java.lang.Throwable,java.lang.String) -> b
    void sendFailureMessage(java.lang.Throwable,byte[]) -> c
    void sendSuccessMessage(int,java.lang.String) -> b
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void handleSuccessMessage(int,java.lang.String) -> c
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> c
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.cloudsdk.common.http.JsonHttpResponseHandler -> com.baidu.cloudsdk.b.a.g:
    void onFailure(java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> a
    void onSuccess(org.json.JSONArray) -> a
    void onSuccess(org.json.JSONObject) -> a
    void onSuccess(int,org.json.JSONArray) -> a
    void onSuccess(int,org.json.JSONObject) -> a
    void sendSuccessMessage(int,java.lang.String) -> b
    void handleMessage(android.os.Message) -> handleMessage
    void handleSuccessJsonMessage(int,java.lang.Object) -> a
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> c
    java.lang.Object parseResponse(java.lang.String) -> b
com.baidu.cloudsdk.common.http.MultipartRequestParams -> com.baidu.cloudsdk.b.a.h:
    java.util.HashMap mFileParams -> a
    void put(java.lang.String,java.io.InputStream) -> a
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> a
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> a
    org.apache.http.HttpEntity getHttpEntity() -> a
    java.lang.StringBuilder getStringBuilder() -> b
com.baidu.cloudsdk.common.http.MultipartRequestParams$a -> com.baidu.cloudsdk.b.a.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.io.InputStream c -> c
    java.lang.String a() -> a
com.baidu.cloudsdk.common.http.RequestParams -> com.baidu.cloudsdk.b.a.j:
    java.util.HashMap mParams -> b
    java.util.HashMap mParamsWithArray -> c
    void put(java.lang.String,java.lang.String) -> a
    org.apache.http.HttpEntity getHttpEntity() -> a
    java.lang.String getQueryString() -> c
    java.lang.String toString() -> toString
    java.lang.StringBuilder getStringBuilder() -> b
    java.util.List a() -> d
com.baidu.cloudsdk.common.imgloader.AsyncImageLoader -> com.baidu.cloudsdk.b.b.a:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.cloudsdk.common.imgloader.AsyncImageLoader$IAsyncImageLoaderListener c -> c
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> a
    java.io.InputStream a(android.net.Uri) -> a
    int computeSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> b
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.cloudsdk.common.imgloader.AsyncImageLoader$IAsyncImageLoaderListener -> com.baidu.cloudsdk.b.b.b:
    void onComplete(android.graphics.Bitmap) -> a
com.baidu.cloudsdk.common.imgloader.AsyncImageLoader$a -> com.baidu.cloudsdk.b.b.c:
    long skip(long) -> skip
com.baidu.cloudsdk.common.imgloader.ImageManager -> com.baidu.cloudsdk.b.b.d:
    java.lang.String DEFAULT_STORAGE_PATH -> a
    com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache a -> b
    h b -> c
    int c -> d
    com.baidu.cloudsdk.common.imgloader.ImageManager d -> e
    com.baidu.cloudsdk.common.imgloader.ImageManager getInstance() -> a
    void loadImage(android.content.Context,android.net.Uri,com.baidu.cloudsdk.common.imgloader.AsyncImageLoader$IAsyncImageLoaderListener) -> a
    h a(com.baidu.cloudsdk.common.imgloader.ImageManager) -> a
    int b(com.baidu.cloudsdk.common.imgloader.ImageManager) -> b
    com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache c(com.baidu.cloudsdk.common.imgloader.ImageManager) -> c
com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache -> com.baidu.cloudsdk.b.b.e:
    int a -> a
    com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$IEvictPolicy b -> b
    java.util.Map c -> c
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$IEvictPolicy -> com.baidu.cloudsdk.b.b.f:
    java.lang.String findItemToDelete(java.util.Map) -> a
    void updateCacheItem(com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$a) -> a
com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$OldestPolicy -> com.baidu.cloudsdk.b.b.g:
    java.lang.String findItemToDelete(java.util.Map) -> a
    void updateCacheItem(com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$a) -> a
com.baidu.cloudsdk.common.imgloader.MemoryBitmapCache$a -> com.baidu.cloudsdk.b.b.h:
    android.graphics.Bitmap a -> a
    int b -> b
    long c -> c
com.baidu.cloudsdk.common.util.CommonParam -> com.baidu.cloudsdk.b.c.a:
    java.lang.String getUA(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getDeviceInfo() -> a
com.baidu.cloudsdk.common.util.CoordinateManager -> com.baidu.cloudsdk.b.c.b:
    java.lang.String a -> a
    android.location.LocationManager b -> b
    android.location.Location c -> c
    com.baidu.cloudsdk.common.util.CoordinateManager$a d -> d
    android.os.Handler e -> e
    com.baidu.cloudsdk.common.util.CoordinateManager f -> f
    com.baidu.cloudsdk.common.util.CoordinateManager getInstance(android.content.Context) -> a
    java.lang.String getCrd() -> a
    android.location.Location a() -> b
    android.location.Location b() -> c
    boolean a(android.location.Location) -> a
    com.baidu.cloudsdk.common.util.CoordinateManager$a a(com.baidu.cloudsdk.common.util.CoordinateManager) -> a
    android.location.Location a(com.baidu.cloudsdk.common.util.CoordinateManager,android.location.Location) -> a
    android.location.LocationManager b(com.baidu.cloudsdk.common.util.CoordinateManager) -> b
com.baidu.cloudsdk.common.util.CoordinateManager$a -> com.baidu.cloudsdk.b.c.c:
    java.lang.String b -> b
    android.location.Location c -> c
    android.location.LocationListener d -> d
    com.baidu.cloudsdk.common.util.CoordinateManager a -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void a(java.lang.Void[]) -> a
    void a(java.lang.Void) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    android.location.Location a(com.baidu.cloudsdk.common.util.CoordinateManager$a,android.location.Location) -> a
com.baidu.cloudsdk.common.util.Utils -> com.baidu.cloudsdk.b.c.d:
    boolean isEmpty(byte[]) -> a
    org.json.JSONObject getFragmentParams(java.lang.String) -> a
    org.json.JSONObject getQueryParams(java.lang.String) -> b
    org.json.JSONObject decodeAsJSONObject(java.lang.String) -> c
    java.lang.String getQueryString(android.os.Bundle) -> a
    boolean isUrl(android.net.Uri) -> a
    java.lang.String base64Encode(java.lang.String) -> d
    java.lang.String base64Encode(byte[]) -> b
    java.lang.String md5(java.lang.String) -> e
    java.lang.String md5(byte[]) -> c
    java.lang.String getRealPathFromUri(android.app.Activity,android.net.Uri) -> a
com.baidu.cloudsdk.common.util.Validator -> com.baidu.cloudsdk.b.c.e:
    void notNull(java.lang.Object,java.lang.String) -> a
    void notNullOrEmpty(java.lang.String,java.lang.String) -> a
    void notNullOrEmpty(java.lang.Object[],java.lang.String) -> a
com.baidu.cloudsdk.social.core.AppPreferenceManager -> com.baidu.cloudsdk.social.a.a:
    com.baidu.cloudsdk.social.core.AppPreferenceManager a -> a
    android.content.SharedPreferences b -> b
    com.baidu.cloudsdk.social.core.AppPreferenceManager getInstance(android.content.Context) -> a
    boolean isActived(java.lang.String) -> a
    void setActived(java.lang.String) -> b
com.baidu.cloudsdk.social.core.BaseConfig -> com.baidu.cloudsdk.social.a.b:
    java.util.Map mStringResources -> a
    java.util.Map mAssetFiles -> b
    android.content.Context mContext -> c
    boolean a -> d
    void loadFromLocal(java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> b
    java.lang.String getAssetFileName(java.lang.String) -> c
    void loadDefaultConfig() -> a
    java.lang.String getDefaultConfigFile() -> b
    void loadSelfDefinedConfigItems(org.json.JSONObject) -> a
    void a(java.lang.String) -> d
    void a(org.json.JSONObject) -> b
    void copyFromJsonObject2Map(org.json.JSONObject,java.util.Map) -> a
com.baidu.cloudsdk.social.core.MediaType -> com.baidu.cloudsdk.social.a.c:
    com.baidu.cloudsdk.social.core.MediaType SINAWEIBO -> a
    com.baidu.cloudsdk.social.core.MediaType QQWEIBO -> b
    com.baidu.cloudsdk.social.core.MediaType QZONE -> c
    com.baidu.cloudsdk.social.core.MediaType KAIXIN -> d
    com.baidu.cloudsdk.social.core.MediaType RENREN -> e
    com.baidu.cloudsdk.social.core.MediaType GOOGLE -> f
    com.baidu.cloudsdk.social.core.MediaType DOUBAN -> g
    com.baidu.cloudsdk.social.core.MediaType FEIXIN -> h
    com.baidu.cloudsdk.social.core.MediaType WANGYI -> i
    com.baidu.cloudsdk.social.core.MediaType SOHUWEIBO -> j
    com.baidu.cloudsdk.social.core.MediaType TIANYA -> k
    com.baidu.cloudsdk.social.core.MediaType BAIDU -> l
    com.baidu.cloudsdk.social.core.MediaType TAOBAO -> m
    com.baidu.cloudsdk.social.core.MediaType ZHIFUBAO -> n
    com.baidu.cloudsdk.social.core.MediaType QQFRIEND -> o
    com.baidu.cloudsdk.social.core.MediaType WEIXIN -> p
    com.baidu.cloudsdk.social.core.MediaType WEIXIN_TIMELINE -> q
    com.baidu.cloudsdk.social.core.MediaType TIEBA -> r
    com.baidu.cloudsdk.social.core.MediaType YOUDAO_NOTE -> s
    com.baidu.cloudsdk.social.core.MediaType EMAIL -> t
    com.baidu.cloudsdk.social.core.MediaType SMS -> u
    java.util.HashMap a -> v
    java.lang.String b -> w
    com.baidu.cloudsdk.social.core.MediaType[] c -> x
    com.baidu.cloudsdk.social.core.MediaType[] values() -> values
    com.baidu.cloudsdk.social.core.MediaType valueOf(java.lang.String) -> valueOf
    com.baidu.cloudsdk.social.core.MediaType fromString(java.lang.String) -> a
    java.lang.String toString() -> toString
com.baidu.cloudsdk.social.core.PositionManager -> com.baidu.cloudsdk.social.a.d:
    java.lang.String a -> b
    boolean b -> c
    android.location.LocationManager c -> d
    android.location.Location d -> e
    com.baidu.cloudsdk.social.core.PositionManager$a e -> f
    com.baidu.cloudsdk.social.core.PositionManager mInstance -> a
    boolean f -> g
    android.os.Handler g -> h
    com.baidu.cloudsdk.social.core.PositionManager getInstance(android.content.Context) -> a
    boolean isRunning() -> a
    void requestLoation(com.baidu.cloudsdk.social.core.PositionManager$IPositionManagerListener) -> a
    com.baidu.cloudsdk.social.core.PositionManager$a a(com.baidu.cloudsdk.social.core.PositionManager) -> a
    boolean a() -> b
    java.lang.String b() -> c
    boolean a(com.baidu.cloudsdk.social.core.PositionManager,boolean) -> a
    android.location.LocationManager b(com.baidu.cloudsdk.social.core.PositionManager) -> b
    android.location.Location a(com.baidu.cloudsdk.social.core.PositionManager,android.location.Location) -> a
    android.location.Location c(com.baidu.cloudsdk.social.core.PositionManager) -> c
com.baidu.cloudsdk.social.core.PositionManager$IPositionManagerListener -> com.baidu.cloudsdk.social.a.e:
    void onComplete(android.location.Location) -> a
com.baidu.cloudsdk.social.core.PositionManager$a -> com.baidu.cloudsdk.social.a.f:
    boolean b -> b
    boolean c -> c
    android.location.LocationListener d -> d
    com.baidu.cloudsdk.social.core.PositionManager$IPositionManagerListener e -> e
    com.baidu.cloudsdk.social.core.PositionManager a -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void a(java.lang.Void[]) -> a
    void a(java.lang.Void) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.cloudsdk.social.core.SessionManager -> com.baidu.cloudsdk.social.a.g:
    com.baidu.cloudsdk.social.core.SessionManager a -> a
    android.content.SharedPreferences b -> b
    com.baidu.cloudsdk.social.core.SessionManager getInstance(android.content.Context) -> a
    com.baidu.cloudsdk.social.core.SessionManager$Session get(java.lang.String) -> a
    java.util.Map getAll() -> a
    boolean save(com.baidu.cloudsdk.social.core.SessionManager$Session) -> a
    boolean save(org.json.JSONObject) -> a
    boolean remove(java.lang.String) -> b
com.baidu.cloudsdk.social.core.SessionManager$1 -> com.baidu.cloudsdk.social.a.h:
com.baidu.cloudsdk.social.core.SessionManager$Session -> com.baidu.cloudsdk.social.a.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String toString() -> toString
    boolean isExpired() -> a
    java.lang.String getMediaType() -> b
    java.lang.String getAccessToken() -> c
com.baidu.cloudsdk.social.core.SocialWidget -> com.baidu.cloudsdk.social.a.j:
    java.lang.String a -> c
    android.content.Context mContext -> a
    java.lang.String mClientId -> b
    java.lang.String getComponentName() -> a
    android.content.Context getContext() -> b
    com.baidu.cloudsdk.social.core.SocialWidget setContext(android.content.Context) -> a
    java.lang.String getClientId() -> c
    com.baidu.cloudsdk.social.core.SocialWidget setClientId(java.lang.String) -> a
com.baidu.cloudsdk.social.core.Statistics -> com.baidu.cloudsdk.social.a.k:
    com.baidu.cloudsdk.social.core.Statistics a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    com.baidu.cloudsdk.social.core.Statistics getInstance(android.content.Context) -> a
    void activate() -> a
    void a() -> b
    void setStatisticsParams(com.baidu.cloudsdk.common.http.RequestParams) -> a
com.baidu.cloudsdk.social.core.util.RequestCodeManager -> com.baidu.cloudsdk.social.a.a.a:
    int a -> a
    int a() -> a
    int nextCode(java.lang.String) -> a
    int getLatestRequestCode(com.baidu.cloudsdk.social.core.MediaType) -> a
    int nextCode(com.baidu.cloudsdk.social.core.MediaType) -> b
com.baidu.cloudsdk.social.core.util.RequestCodeManager$1 -> com.baidu.cloudsdk.social.a.a.b:
    int[] a -> a
com.baidu.cloudsdk.social.core.util.Weixin -> com.baidu.cloudsdk.social.a.a.c:
    java.lang.String a -> a
    java.lang.String[] b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    int e -> e
    boolean f -> f
    boolean isAppInstalled() -> a
    boolean isTimelineSupported() -> b
    int getSdkVersion() -> c
    void registerApp() -> d
    boolean sendRequest(android.os.Bundle) -> a
    void sendBroadcast(java.lang.String,java.lang.String,android.os.Bundle) -> a
    void addBaseRequestParams(android.os.Bundle,java.lang.String,boolean) -> a
    byte[] a(java.lang.String,java.lang.String,int) -> a
com.baidu.cloudsdk.social.oauth.SocialConfig -> com.baidu.cloudsdk.social.oauth.a:
    com.baidu.cloudsdk.social.oauth.SocialConfig a -> d
    java.util.Map b -> e
    java.util.Map c -> f
    java.util.List d -> g
    com.baidu.cloudsdk.social.oauth.SocialConfig getInstance(android.content.Context) -> a
    java.lang.String getClientId(com.baidu.cloudsdk.social.core.MediaType) -> a
    java.util.List getSsoMediaTypes() -> c
    java.lang.String getClientName(com.baidu.cloudsdk.social.core.MediaType) -> b
    java.lang.String getDefaultConfigFile() -> b
    void loadSelfDefinedConfigItems(org.json.JSONObject) -> a
com.baidu.cloudsdk.social.oauth.SocialOAuthActivity -> com.baidu.cloudsdk.social.oauth.SocialOAuthActivity:
    com.baidu.cloudsdk.IBaiduListener a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    w e -> e
    com.baidu.cloudsdk.IBaiduListener f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setListener(com.baidu.cloudsdk.IBaiduListener) -> a
    void a() -> a
    com.baidu.cloudsdk.IBaiduListener b() -> b
com.baidu.cloudsdk.social.oauth.SocialOAuthErrorCodes -> com.baidu.cloudsdk.social.oauth.b:
    java.lang.String getErrorDescription(int) -> a
com.baidu.cloudsdk.social.restapi.SocialRestAPIImpl -> com.baidu.cloudsdk.social.b.a:
    com.baidu.cloudsdk.common.http.AsyncHttpClient a -> a
    android.content.Context b -> b
    void getUserInfo(java.lang.String,com.baidu.cloudsdk.IBaiduListener) -> a
com.baidu.cloudsdk.social.share.ShareContent -> com.baidu.cloudsdk.social.share.ShareContent:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.net.Uri g -> g
    android.graphics.Bitmap h -> h
    boolean i -> i
    android.location.Location j -> j
    boolean k -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTitle() -> a
    java.lang.String getContent() -> b
    com.baidu.cloudsdk.social.share.ShareContent setContent(java.lang.String) -> a
    java.lang.String getEmailBody() -> c
    com.baidu.cloudsdk.social.share.ShareContent setEmailBody(java.lang.String,java.lang.String) -> a
    java.lang.String getLinkUrl() -> d
    com.baidu.cloudsdk.social.share.ShareContent setLinkUrl(java.lang.String) -> b
    android.net.Uri getImageUri() -> e
    com.baidu.cloudsdk.social.share.ShareContent setImageUri(android.net.Uri) -> a
    android.graphics.Bitmap getImageData() -> f
    android.location.Location getLocation() -> g
    com.baidu.cloudsdk.social.share.ShareContent setLocation(android.location.Location) -> a
    boolean isNeedLocation() -> h
    com.baidu.cloudsdk.social.share.ShareContent setNeedLoacation(boolean) -> a
    byte[] getCompressedImageData() -> i
    com.baidu.cloudsdk.social.share.ShareContent setImageData(android.graphics.Bitmap) -> a
    void saveImageDataIfNecessary() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.cloudsdk.social.share.SocialShare -> com.baidu.cloudsdk.social.share.a:
    com.baidu.cloudsdk.social.share.SocialShare a -> c
    com.baidu.cloudsdk.social.share.SocialShare getInstance(android.content.Context,java.lang.String) -> a
    void show(android.view.View,com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle,com.baidu.cloudsdk.IBaiduListener) -> a
    void share(com.baidu.cloudsdk.social.share.ShareContent,java.lang.String,com.baidu.cloudsdk.IBaiduListener) -> a
    void share(com.baidu.cloudsdk.social.share.ShareContent,java.lang.String,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void share(com.baidu.cloudsdk.social.share.ShareContent,java.lang.String[],com.baidu.cloudsdk.IBaiduListener) -> a
    java.lang.String getComponentName() -> a
com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle -> com.baidu.cloudsdk.social.share.b:
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle DEFAULT -> a
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle IOS_LIKE -> b
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle[] a -> c
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle[] values() -> values
    com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle valueOf(java.lang.String) -> valueOf
com.baidu.cloudsdk.social.share.SocialShareConfig -> com.baidu.cloudsdk.social.share.c:
    com.baidu.cloudsdk.social.share.SocialShareConfig a -> d
    java.util.List b -> e
    com.baidu.cloudsdk.social.share.SocialShareConfig getInstance(android.content.Context) -> a
    java.util.List getSupportedMediaTypes() -> c
    java.lang.String getDefaultConfigFile() -> b
    void loadSelfDefinedConfigItems(org.json.JSONObject) -> a
com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler -> com.baidu.cloudsdk.social.share.handler.a:
    android.content.Context a -> a
    java.lang.String[] b -> b
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent,java.util.List,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.common.http.MultipartRequestParams,com.baidu.cloudsdk.IBaiduListener) -> a
    void a(com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler,com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.common.http.MultipartRequestParams,com.baidu.cloudsdk.IBaiduListener) -> a
com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler$a -> com.baidu.cloudsdk.social.share.handler.b:
    android.net.Uri b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler a -> a
    void onComplete(java.io.ByteArrayOutputStream) -> a
com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler$b -> com.baidu.cloudsdk.social.share.handler.c:
    android.net.Uri b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler a -> a
    void onComplete(android.graphics.Bitmap) -> a
com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler$c -> com.baidu.cloudsdk.social.share.handler.d:
    com.baidu.cloudsdk.social.share.ShareContent b -> b
    com.baidu.cloudsdk.common.http.MultipartRequestParams c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    com.baidu.cloudsdk.social.share.handler.CloudBatchShareHandler a -> a
    void onComplete(android.location.Location) -> a
com.baidu.cloudsdk.social.share.handler.CompressBitmapTask -> com.baidu.cloudsdk.social.share.handler.e:
    java.lang.String a -> a
    com.baidu.cloudsdk.social.share.handler.CompressBitmapTask$ICompressBitmapListener b -> b
    java.io.ByteArrayOutputStream a(android.graphics.Bitmap[]) -> a
    void a(java.io.ByteArrayOutputStream) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.cloudsdk.social.share.handler.CompressBitmapTask$ICompressBitmapListener -> com.baidu.cloudsdk.social.share.handler.f:
    void onComplete(java.io.ByteArrayOutputStream) -> a
com.baidu.cloudsdk.social.share.handler.ISocialShareHandler -> com.baidu.cloudsdk.social.share.handler.g:
    void share(com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.IBaiduListener,boolean) -> a
com.baidu.cloudsdk.social.share.handler.LocalShareActivity -> com.baidu.cloudsdk.social.share.handler.LocalShareActivity:
    java.lang.String a -> a
    int b -> b
    com.baidu.cloudsdk.social.share.ShareContent c -> c
    ad d -> d
    com.baidu.cloudsdk.IBaiduListener e -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestart() -> onRestart
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.baidu.cloudsdk.social.share.handler.LocalShareHandlerFactory -> com.baidu.cloudsdk.social.share.handler.h:
    com.baidu.cloudsdk.social.share.handler.LocalShareActivity a -> a
    ad newInstance(java.lang.String,int,com.baidu.cloudsdk.IBaiduListener) -> a
com.baidu.cloudsdk.social.share.handler.LocalShareHandlerFactory$1 -> com.baidu.cloudsdk.social.share.handler.i:
    int[] a -> a
com.baidu.cloudsdk.social.share.handler.QQFriendShareReceiverActivity -> com.baidu.cloudsdk.social.share.handler.QQFriendShareReceiverActivity:
    java.lang.String a -> a
    com.baidu.cloudsdk.IBaiduListener b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a(android.net.Uri) -> a
    void a(android.os.Bundle) -> a
    android.os.Bundle a(java.lang.String) -> a
com.baidu.cloudsdk.social.share.handler.SocialShareHandlerFactory -> com.baidu.cloudsdk.social.share.handler.j:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.baidu.cloudsdk.social.share.handler.ISocialShareHandler newInstance(java.lang.String) -> a
    java.lang.String a(com.baidu.cloudsdk.social.core.MediaType) -> a
com.baidu.cloudsdk.social.share.handler.SocialShareHandlerFactory$1 -> com.baidu.cloudsdk.social.share.handler.k:
    int[] a -> a
com.baidu.cloudsdk.social.share.handler.WXMediaMessage -> com.baidu.cloudsdk.social.share.handler.l:
    java.lang.String a -> a
    java.lang.String b -> b
    byte[] c -> c
    com.baidu.cloudsdk.social.share.handler.WXMediaMessage$IMediaObject d -> d
    com.baidu.cloudsdk.social.share.handler.WXMediaMessage a(android.graphics.Bitmap) -> a
    android.os.Bundle a() -> a
    byte[] b(android.graphics.Bitmap) -> b
com.baidu.cloudsdk.social.share.handler.WXMediaMessage$IMediaObject -> com.baidu.cloudsdk.social.share.handler.m:
    void serialize(android.os.Bundle) -> a
    java.lang.String identifier() -> a
com.baidu.cloudsdk.social.share.handler.WXMediaMessage$WXWebpageObject -> com.baidu.cloudsdk.social.share.handler.n:
    java.lang.String a -> a
    void serialize(android.os.Bundle) -> a
    java.lang.String identifier() -> a
com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog -> com.baidu.cloudsdk.social.share.a.a:
    java.lang.String a -> a
    int b -> b
    android.widget.Button c -> c
    android.widget.Button d -> d
    android.widget.EditText e -> e
    android.widget.TextView f -> f
    java.util.List g -> g
    au h -> h
    ao i -> i
    al j -> j
    android.content.Context k -> k
    com.baidu.cloudsdk.social.core.MediaType l -> l
    com.baidu.cloudsdk.social.share.ShareContent m -> m
    com.baidu.cloudsdk.social.share.SocialShare n -> n
    com.baidu.cloudsdk.IBaiduListener o -> o
    int p -> p
    com.baidu.cloudsdk.social.share.SocialShareConfig q -> q
    com.baidu.cloudsdk.social.oauth.SocialConfig r -> r
    android.view.GestureDetector s -> s
    android.view.inputmethod.InputMethodManager t -> t
    android.text.TextWatcher u -> u
    com.baidu.cloudsdk.social.share.SocialShare getSocialShare() -> a
    void getMinItemLength() -> b
    void b() -> d
    android.widget.RelativeLayout c() -> e
    android.widget.RelativeLayout d() -> f
    android.widget.ListView e() -> g
    boolean f() -> h
    long a(java.lang.CharSequence) -> a
    void onClick(android.view.View) -> onClick
    java.lang.String a() -> c
    android.widget.TextView a(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog) -> a
    android.widget.EditText b(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog) -> b
    android.view.inputmethod.InputMethodManager c(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog) -> c
    android.view.GestureDetector d(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog) -> d
    al e(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog) -> e
    long a(com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog,java.lang.CharSequence) -> a
com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog$1 -> com.baidu.cloudsdk.social.share.a.b:
    int[] a -> a
com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog$a -> com.baidu.cloudsdk.social.share.a.c:
    com.baidu.cloudsdk.social.share.ui.ShareContentEditDialog a -> a
    void onComplete(android.graphics.Bitmap) -> a
com.baidu.cloudsdk.social.share.ui.ShareUIWidget -> com.baidu.cloudsdk.social.share.a.d:
    com.baidu.cloudsdk.social.share.ui.ShareUIWidget a -> a
    com.baidu.cloudsdk.social.share.SocialShare b -> b
    ba c -> c
    com.baidu.cloudsdk.social.share.ui.ShareUIWidget getInstance(com.baidu.cloudsdk.social.share.SocialShare) -> a
    void a(com.baidu.cloudsdk.social.share.SocialShare) -> b
    void show(android.view.View,com.baidu.cloudsdk.social.share.ShareContent,com.baidu.cloudsdk.social.share.SocialShare$UIWidgetStyle,com.baidu.cloudsdk.IBaiduListener) -> a
com.baidu.cloudsdk.social.share.ui.SocialMediaGridView -> com.baidu.cloudsdk.social.share.a.e:
    com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$GridViewParams a -> a
    android.support.v4.view.ViewPager b -> b
    android.view.View$OnClickListener c -> c
    com.baidu.cloudsdk.social.share.SocialShareConfig d -> d
    com.baidu.cloudsdk.social.oauth.SocialConfig e -> e
    java.util.List f -> f
    android.graphics.drawable.Drawable g -> g
    android.graphics.drawable.Drawable h -> h
    android.graphics.drawable.Drawable i -> i
    java.util.Map j -> j
    android.widget.ImageView[] k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    void a(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$GridViewParams,android.view.View$OnClickListener) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    android.graphics.drawable.Drawable a() -> a
    android.graphics.drawable.Drawable b() -> b
    android.graphics.drawable.Drawable a(com.baidu.cloudsdk.social.core.MediaType) -> a
    android.graphics.drawable.Drawable c() -> c
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    int a(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> a
    int b(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> b
    int c(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> c
    java.util.List d(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> d
    android.graphics.drawable.Drawable a(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView,com.baidu.cloudsdk.social.core.MediaType) -> a
    android.graphics.drawable.Drawable e(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> e
    com.baidu.cloudsdk.social.oauth.SocialConfig f(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> f
    com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$GridViewParams g(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> g
    android.view.View$OnClickListener h(com.baidu.cloudsdk.social.share.ui.SocialMediaGridView) -> h
com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$GridViewParams -> com.baidu.cloudsdk.social.share.a.f:
    int mFixedHeight -> a
    int mPageIndicatorLayoutHeight -> b
    int mItemTextColor -> c
    boolean mNeedTextShadow -> d
    int mItemTextShadowColor -> e
    java.lang.String mCurrentPageIcon -> f
    java.lang.String mNonCurrentPageIcon -> g
com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$a -> com.baidu.cloudsdk.social.share.a.g:
    com.baidu.cloudsdk.social.share.ui.SocialMediaGridView a -> a
    android.widget.LinearLayout a(android.content.Context,int) -> a
com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$b -> com.baidu.cloudsdk.social.share.a.h:
    com.baidu.cloudsdk.social.share.ui.SocialMediaGridView$a[] b -> b
    com.baidu.cloudsdk.social.share.ui.SocialMediaGridView a -> a
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
com.fived.welink.R -> com.fived.welink.a:
com.fived.welink.R$styleable -> com.fived.welink.b:
    int[] HelloGallery -> HelloGallery
    int HelloGallery_android_galleryItemBackground -> HelloGallery_android_galleryItemBackground
com.fived.welink.appshare.AppInfo -> com.fived.welink.appshare.a:
    java.lang.String appName -> a
    java.lang.String packageName -> b
    java.lang.String versionName -> c
    long appSize -> d
    java.lang.String sourceDir -> e
    int versionCode -> f
    com.fived.welink.appshare.MyBitmap appIcon -> g
    boolean sharenable -> h
    boolean isDownloading -> i
    java.lang.String btnText -> j
    int btnTextColor -> k
    int progress -> l
    boolean equals(java.lang.Object) -> equals
com.fived.welink.appshare.AppManager -> com.fived.welink.appshare.b:
    android.content.pm.PackageManager packageManager -> c
    com.fived.welink.appshare.AppManager appManager -> a
    android.content.Context tx -> b
    com.fived.welink.appshare.AppManager getInstance(android.content.Context) -> a
    java.util.ArrayList installPackagesInfo() -> a
com.fived.welink.appshare.AppShareMainActivity -> com.fived.welink.appshare.AppShareMainActivity:
    android.widget.TextView myAppLoading -> b
    android.widget.TextView otherAppLoading -> c
    android.widget.Button btnMyApp -> d
    android.widget.Button btnOtherApp -> e
    android.widget.Button btnRefresh -> f
    android.widget.Button btnBack -> g
    android.support.v4.view.ViewPager viewPager -> h
    com.fived.welink.appshare.AppShareMainActivity$MyPagerAdapter myPagerAdapter -> i
    int switchFlag -> j
    boolean isDownloag -> k
    boolean isFresh -> l
    com.fived.welink.appshare.AppShareMainActivity$DownloadAsyncTask dlt -> m
    com.fived.welink.bgservice.SocketService$ServiceBinder binder -> n
    android.widget.Toast myToast -> o
    boolean isStop -> p
    java.util.ArrayList myAppInfoList -> q
    com.fived.welink.appshare.AppShareMainActivity$MyAsyncTask myAsyncTask -> r
    com.fived.welink.appshare.AppShareMainActivity$MyAdapter myAdapter -> s
    java.util.ArrayList otherAppInfoList -> t
    com.fived.welink.appshare.AppShareMainActivity$OtherAsyncTask otherAsyncTask -> u
    com.fived.welink.appshare.AppShareMainActivity$OtherAdapter otherAdapter -> v
    android.content.ServiceConnection conn -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void SlideView() -> a
    void onDestroy() -> onDestroy
    void access$0(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.bgservice.SocketService$ServiceBinder) -> a
    java.util.ArrayList access$1(com.fived.welink.appshare.AppShareMainActivity) -> a
    java.util.ArrayList access$2(com.fived.welink.appshare.AppShareMainActivity) -> b
    boolean access$3(com.fived.welink.appshare.AppShareMainActivity) -> c
    com.fived.welink.appshare.AppShareMainActivity$OtherAdapter access$4(com.fived.welink.appshare.AppShareMainActivity) -> d
    void access$5(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$DownloadAsyncTask) -> a
    com.fived.welink.appshare.AppShareMainActivity$DownloadAsyncTask access$6(com.fived.welink.appshare.AppShareMainActivity) -> e
    android.widget.Toast access$7(com.fived.welink.appshare.AppShareMainActivity) -> f
    void access$8(com.fived.welink.appshare.AppShareMainActivity,android.widget.Toast) -> a
    com.fived.welink.bgservice.SocketService$ServiceBinder access$9(com.fived.welink.appshare.AppShareMainActivity) -> g
    boolean access$10(com.fived.welink.appshare.AppShareMainActivity) -> h
    void access$11(com.fived.welink.appshare.AppShareMainActivity,java.util.ArrayList) -> a
    android.widget.TextView access$12(com.fived.welink.appshare.AppShareMainActivity) -> i
    void access$13(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$MyAdapter) -> a
    com.fived.welink.appshare.AppShareMainActivity$MyAdapter access$14(com.fived.welink.appshare.AppShareMainActivity) -> j
    void access$15(com.fived.welink.appshare.AppShareMainActivity,java.util.ArrayList) -> b
    void access$16(com.fived.welink.appshare.AppShareMainActivity,boolean) -> a
    android.widget.TextView access$17(com.fived.welink.appshare.AppShareMainActivity) -> k
    void access$18(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$OtherAdapter) -> a
    void access$19(com.fived.welink.appshare.AppShareMainActivity,boolean) -> b
    void access$20(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$MyAsyncTask) -> a
    com.fived.welink.appshare.AppShareMainActivity$MyAsyncTask access$21(com.fived.welink.appshare.AppShareMainActivity) -> l
    void access$22(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$OtherAsyncTask) -> a
    com.fived.welink.appshare.AppShareMainActivity$OtherAsyncTask access$23(com.fived.welink.appshare.AppShareMainActivity) -> m
    int access$24(com.fived.welink.appshare.AppShareMainActivity) -> n
    android.support.v4.view.ViewPager access$25(com.fived.welink.appshare.AppShareMainActivity) -> o
    void access$26(com.fived.welink.appshare.AppShareMainActivity,int) -> a
    boolean access$27(com.fived.welink.appshare.AppShareMainActivity) -> p
    void access$28(com.fived.welink.appshare.AppShareMainActivity,com.fived.welink.appshare.AppShareMainActivity$MyPagerAdapter) -> a
    com.fived.welink.appshare.AppShareMainActivity$MyPagerAdapter access$29(com.fived.welink.appshare.AppShareMainActivity) -> q
    android.widget.Button access$30(com.fived.welink.appshare.AppShareMainActivity) -> r
    android.widget.Button access$31(com.fived.welink.appshare.AppShareMainActivity) -> s
    android.widget.Button access$32(com.fived.welink.appshare.AppShareMainActivity) -> t
com.fived.welink.appshare.AppShareMainActivity$1 -> com.fived.welink.appshare.c:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fived.welink.appshare.AppShareMainActivity$2 -> com.fived.welink.appshare.d:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.appshare.AppShareMainActivity$3 -> com.fived.welink.appshare.e:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.appshare.AppShareMainActivity$4 -> com.fived.welink.appshare.f:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.appshare.AppShareMainActivity$5 -> com.fived.welink.appshare.g:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.appshare.AppShareMainActivity$6 -> com.fived.welink.appshare.h:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.fived.welink.appshare.AppShareMainActivity$DownloadAsyncTask -> com.fived.welink.appshare.i:
    int pos -> b
    com.fived.welink.appshare.AppInfo appInfo -> c
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Integer) -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Double[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.fived.welink.appshare.AppShareMainActivity$MyAdapter -> com.fived.welink.appshare.j:
    java.util.ArrayList appList -> b
    android.content.Context context -> c
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.fived.welink.appshare.AppShareMainActivity access$0(com.fived.welink.appshare.AppShareMainActivity$MyAdapter) -> a
com.fived.welink.appshare.AppShareMainActivity$MyAdapter$MyOnCheckedChangeListener -> com.fived.welink.appshare.k:
    com.fived.welink.appshare.AppShareMainActivity$MyAdapter$myViewHolder holder -> a
    int pos -> b
    com.fived.welink.appshare.AppShareMainActivity$MyAdapter this$1 -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fived.welink.appshare.AppShareMainActivity$MyAdapter$myViewHolder -> com.fived.welink.appshare.l:
    android.widget.ImageView imageView -> a
    android.widget.TextView nameView -> b
    android.widget.TextView infoView -> c
    android.widget.CheckBox checkBox -> d
    com.fived.welink.appshare.AppShareMainActivity$MyAdapter this$1 -> e
com.fived.welink.appshare.AppShareMainActivity$MyAsyncTask -> com.fived.welink.appshare.m:
    android.content.Context context -> b
    android.widget.ListView listView -> c
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.String) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.fived.welink.appshare.AppShareMainActivity$MyPagerAdapter -> com.fived.welink.appshare.n:
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
com.fived.welink.appshare.AppShareMainActivity$OtherAdapter -> com.fived.welink.appshare.o:
    java.util.ArrayList appList -> b
    android.content.Context context -> c
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    com.fived.welink.appshare.AppShareMainActivity access$0(com.fived.welink.appshare.AppShareMainActivity$OtherAdapter) -> a
com.fived.welink.appshare.AppShareMainActivity$OtherAdapter$DownLoadOnClickListener -> com.fived.welink.appshare.p:
    int pos -> b
    com.fived.welink.appshare.AppShareMainActivity$OtherAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.appshare.AppShareMainActivity$OtherAdapter$OtherViewHolder -> com.fived.welink.appshare.q:
    android.widget.ImageView imageView -> a
    android.widget.TextView nameView -> b
    android.widget.TextView infoView -> c
    android.widget.Button button -> d
    android.widget.ProgressBar progressbar -> e
    com.fived.welink.appshare.AppShareMainActivity$OtherAdapter this$1 -> f
com.fived.welink.appshare.AppShareMainActivity$OtherAsyncTask -> com.fived.welink.appshare.r:
    android.content.Context context -> b
    android.widget.ListView listView -> c
    com.fived.welink.appshare.AppShareMainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.String) -> a
    void onProgressUpdate(java.lang.Integer[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.fived.welink.appshare.BytesBitmap -> com.fived.welink.appshare.s:
    android.graphics.Bitmap getBitmap(byte[]) -> a
    byte[] getBytes(android.graphics.Bitmap) -> a
com.fived.welink.appshare.MyBitmap -> com.fived.welink.appshare.t:
    byte[] bitmapBytes -> a
    byte[] getBitmapBytes() -> a
com.fived.welink.bgservice.SocketService -> com.fived.welink.bgservice.SocketService:
    java.lang.String SDCARD_PATH -> a
    java.lang.String DST_PATH -> b
    java.net.Socket socket -> c
    java.util.ArrayList chatMsgList -> d
    java.io.OutputStream out -> e
    java.io.InputStream in -> f
    java.util.concurrent.locks.Lock locker -> g
    int sendStatus -> h
    double downLoadProgress -> i
    java.util.ArrayList myAppInfoList -> j
    java.util.ArrayList otherAppInfoList -> k
    boolean isDownLoadingApp -> l
    boolean isUpdateMyAppList -> m
    boolean isUpdateOtherAppList -> n
    boolean isDownloadSuccessful -> o
    java.lang.String downloadAppName -> p
    java.lang.String downloadAppPath -> q
    java.lang.String sendAppName -> r
    android.app.NotificationManager manager -> s
    android.app.Notification notifDwonload -> t
    android.app.Notification notifSend -> u
    com.fived.welink.bgservice.SocketService$MyHandler handler -> v
    java.util.ArrayList gameInfoList -> w
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void sendMsg(java.lang.String) -> a
    void sendMsg(java.lang.String,java.lang.String,java.lang.String) -> a
    void sendMsg(java.lang.String,java.lang.String) -> a
    void addMsgToChartList(int,java.lang.String) -> a
    boolean access$0(com.fived.welink.bgservice.SocketService) -> a
    double access$1(com.fived.welink.bgservice.SocketService) -> b
    void access$2(com.fived.welink.bgservice.SocketService,double) -> a
    boolean access$3(com.fived.welink.bgservice.SocketService) -> c
    void access$4(com.fived.welink.bgservice.SocketService,boolean) -> a
    boolean access$5(com.fived.welink.bgservice.SocketService) -> d
    boolean access$6(com.fived.welink.bgservice.SocketService) -> e
    java.util.ArrayList access$7(com.fived.welink.bgservice.SocketService) -> f
    void access$8(com.fived.welink.bgservice.SocketService,boolean) -> b
    java.util.ArrayList access$9(com.fived.welink.bgservice.SocketService) -> g
    java.util.ArrayList access$10(com.fived.welink.bgservice.SocketService) -> h
    java.util.concurrent.locks.Lock access$11(com.fived.welink.bgservice.SocketService) -> i
    com.fived.welink.bgservice.SocketService$MyHandler access$12(com.fived.welink.bgservice.SocketService) -> j
    void access$13(com.fived.welink.bgservice.SocketService,java.util.ArrayList) -> a
    void access$14(com.fived.welink.bgservice.SocketService,java.lang.String) -> a
    void access$15(com.fived.welink.bgservice.SocketService,java.lang.String) -> b
    void access$16(com.fived.welink.bgservice.SocketService,boolean) -> c
    java.lang.String access$17(com.fived.welink.bgservice.SocketService) -> k
    int access$18(com.fived.welink.bgservice.SocketService) -> l
    void access$19(com.fived.welink.bgservice.SocketService,boolean) -> d
    void access$20(com.fived.welink.bgservice.SocketService,java.util.ArrayList) -> b
    void access$21(com.fived.welink.bgservice.SocketService,int) -> a
    void access$22(com.fived.welink.bgservice.SocketService,java.lang.String) -> c
    java.lang.String access$23(com.fived.welink.bgservice.SocketService) -> m
    java.lang.String access$24(com.fived.welink.bgservice.SocketService) -> n
    android.app.Notification access$25(com.fived.welink.bgservice.SocketService) -> o
    android.app.NotificationManager access$26(com.fived.welink.bgservice.SocketService) -> p
    android.app.Notification access$27(com.fived.welink.bgservice.SocketService) -> q
com.fived.welink.bgservice.SocketService$FileAcDlgOnClickListener -> com.fived.welink.bgservice.a:
    java.lang.String dir -> b
    java.lang.String name -> c
    com.fived.welink.bgservice.SocketService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.bgservice.SocketService$GameAcDlgOnClickListener -> com.fived.welink.bgservice.b:
    com.fived.welink.bgservice.SocketService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.bgservice.SocketService$GetMyAppListThread -> com.fived.welink.bgservice.c:
    com.fived.welink.bgservice.SocketService this$0 -> a
    void run() -> run
com.fived.welink.bgservice.SocketService$MyHandler -> com.fived.welink.bgservice.d:
    com.fived.welink.bgservice.SocketService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fived.welink.bgservice.SocketService$ReadThread -> com.fived.welink.bgservice.e:
    com.fived.welink.bgservice.SocketService this$0 -> a
    void run() -> run
com.fived.welink.bgservice.SocketService$SendAppThread -> com.fived.welink.bgservice.f:
    java.lang.String appDir -> a
    java.lang.String appName -> b
    com.fived.welink.bgservice.SocketService this$0 -> c
    void run() -> run
com.fived.welink.bgservice.SocketService$SendMsgThread -> com.fived.welink.bgservice.g:
    java.lang.String chartMsg -> b
    int status -> c
    com.fived.welink.bgservice.SocketService this$0 -> a
    void run() -> run
com.fived.welink.bgservice.SocketService$SendMyAppListThread -> com.fived.welink.bgservice.h:
    com.fived.welink.bgservice.SocketService this$0 -> a
    void run() -> run
com.fived.welink.bgservice.SocketService$ServiceBinder -> com.fived.welink.bgservice.i:
    com.fived.welink.bgservice.SocketService this$0 -> a
    boolean isDownloadSuccessful() -> a
    double getProgress() -> b
    void setProgress(double) -> a
    void DownloadApp(java.lang.String,java.lang.String) -> a
    boolean isDownloadApp() -> c
    void setDownloadApp(boolean) -> a
    boolean isUpdateMyAppList() -> d
    boolean isUpdateOtherAppList() -> e
    void sendChartMsg(java.lang.String) -> a
    java.util.ArrayList getMyAppList() -> f
    void requestOtherAppList() -> g
    java.util.ArrayList getOtherAppList() -> h
    void sendGameInfo(java.lang.String,java.lang.String) -> b
    void sendGameInfo(java.lang.String) -> b
    void sendSelectedApp(java.lang.String,java.lang.String) -> c
    java.util.ArrayList getGameInfo() -> i
    java.util.ArrayList getMsg() -> j
com.fived.welink.bgservice.SocketService$SocketCreateThread -> com.fived.welink.bgservice.j:
    android.content.Intent intent -> b
    com.fived.welink.bgservice.SocketService this$0 -> a
    void run() -> run
com.fived.welink.chart.ChartMainActivity -> com.fived.welink.chart.ChartMainActivity:
    java.util.ArrayList chatList -> a
    java.lang.String[] from -> b
    int[] to -> c
    int[] layout -> d
    java.lang.String contactName -> e
    android.widget.ListView chatListView -> f
    android.widget.Button chatSendButton -> g
    android.widget.Button appShareButton -> h
    android.widget.Button contactInfoButton -> i
    android.widget.Button exitButton -> j
    android.widget.EditText editText -> k
    android.widget.TextView gameView -> l
    com.fived.welink.bgservice.SocketService$ServiceBinder binder -> m
    com.fived.welink.chart.ChartMainActivity$MyChatAdapter adapter -> n
    com.fived.welink.chart.ChartMainActivity$GetMsgHandler getMsgHandler -> o
    android.widget.Toast toast -> p
    boolean isRun -> q
    android.content.ServiceConnection conn -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addTextToList(java.lang.String,int) -> a
    void onDestroy() -> onDestroy
com.fived.welink.chart.ChartMainActivity$1 -> com.fived.welink.chart.a:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fived.welink.chart.ChartMainActivity$2 -> com.fived.welink.chart.b:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.chart.ChartMainActivity$3 -> com.fived.welink.chart.c:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.chart.ChartMainActivity$4 -> com.fived.welink.chart.d:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.chart.ChartMainActivity$5 -> com.fived.welink.chart.e:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.chart.ChartMainActivity$6 -> com.fived.welink.chart.f:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.chart.ChartMainActivity$GetMsgHandler -> com.fived.welink.chart.g:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fived.welink.chart.ChartMainActivity$GetMsgThread -> com.fived.welink.chart.h:
    com.fived.welink.chart.ChartMainActivity this$0 -> a
    void run() -> run
com.fived.welink.chart.ChartMainActivity$MyChatAdapter -> com.fived.welink.chart.i:
    android.content.Context context -> a
    java.util.ArrayList chatList -> b
    int[] layout -> c
    java.lang.String[] from -> d
    int[] to -> e
    com.fived.welink.chart.ChartMainActivity this$0 -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fived.welink.chart.ChartMainActivity$MyChatAdapter$ViewHolder -> com.fived.welink.chart.j:
    android.widget.ImageView imageView -> a
    android.widget.TextView textView -> b
    com.fived.welink.chart.ChartMainActivity$MyChatAdapter this$1 -> c
com.fived.welink.dataproc.ChartInfo -> com.fived.welink.a.a:
    int flag -> a
    java.lang.String content -> b
com.fived.welink.dataproc.DBHelper -> com.fived.welink.a.b:
    com.fived.welink.dataproc.DBHelper dbHelper -> a
    com.fived.welink.dataproc.DBHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fived.welink.dataproc.DataStoreManager -> com.fived.welink.a.c:
    android.content.SharedPreferences share -> b
    android.content.SharedPreferences$Editor editor -> c
    android.content.Context t -> d
    com.fived.welink.dataproc.DataStoreManager dataStoreManager -> a
    com.fived.welink.dataproc.DataStoreManager getDefaultInstance(android.content.Context) -> a
    android.content.SharedPreferences$Editor getEditor() -> a
    void setStartStatus() -> b
    void setWriteStatus() -> c
    boolean getStartStauts() -> d
    boolean getWriteStatus() -> e
    void setAppData(java.util.ArrayList) -> a
    java.util.HashSet getAppData() -> f
com.fived.welink.dataproc.OpenFile -> com.fived.welink.a.d:
    java.lang.String filePath -> b
    android.content.Context context -> c
    java.lang.String[][] MIME_MapTable -> a
    void Open() -> a
    java.lang.String getMIMEType(java.lang.String) -> a
com.fived.welink.dataproc.SendAPK -> com.fived.welink.a.e:
    android.app.Activity activity -> b
    java.lang.String filePath -> c
    com.fived.welink.dataproc.SendAPK sendAPK -> a
    com.fived.welink.dataproc.SendAPK getInstance(android.app.Activity) -> a
    void sendFile() -> a
    void sendFile(java.lang.String) -> a
com.fived.welink.dataproc.Utils -> com.fived.welink.a.f:
    long lastClickTime -> a
    boolean isFastDoubleClick(long) -> a
com.fived.welink.fileshare.FileShareMainActivity -> com.fived.welink.fileshare.FileShareMainActivity:
    java.util.List mData -> a
    java.lang.String mDir -> b
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getData() -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void finishWithResult(java.lang.String) -> a
    java.util.List access$0(com.fived.welink.fileshare.FileShareMainActivity) -> a
com.fived.welink.fileshare.FileShareMainActivity$MyAdapter -> com.fived.welink.fileshare.a:
    android.view.LayoutInflater mInflater -> b
    com.fived.welink.fileshare.FileShareMainActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fived.welink.fileshare.FileShareMainActivity$ViewHolder -> com.fived.welink.fileshare.b:
    android.widget.ImageView img -> a
    android.widget.TextView title -> b
    android.widget.TextView info -> c
    com.fived.welink.fileshare.FileShareMainActivity this$0 -> d
com.fived.welink.game.FiveChessInfo -> com.fived.welink.game.a:
    int r -> a
    int c -> b
com.fived.welink.game.FiveChessMainActivity -> com.fived.welink.game.FiveChessMainActivity:
    com.fived.welink.game.FiveChessView gameView -> a
    boolean isRun -> b
    android.content.DialogInterface$OnClickListener listener -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.fived.welink.game.FiveChessMainActivity$1 -> com.fived.welink.game.b:
    com.fived.welink.game.FiveChessMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.game.FiveChessView -> com.fived.welink.game.c:
    com.fived.welink.game.FiveChessMainActivity context -> a
    com.fived.welink.bgservice.SocketService$ServiceBinder binder -> b
    int nowR -> c
    int nowC -> d
    int screenWidth -> e
    int screenHeight -> f
    java.lang.String message -> g
    java.lang.String role -> h
    int row -> i
    int col -> j
    int stepLength -> k
    int chessSize -> l
    int startX -> m
    int startY -> n
    int[][] chess -> o
    boolean isBlack -> p
    boolean canPlay -> q
    android.content.ServiceConnection conn -> r
    android.os.Handler myHandler -> s
    java.lang.Thread InfogetThread -> t
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void update(int,int) -> a
    boolean judge(int,int,int,int) -> a
    void access$0(com.fived.welink.game.FiveChessView,int,int) -> a
com.fived.welink.game.FiveChessView$1 -> com.fived.welink.game.d:
    com.fived.welink.game.FiveChessView this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fived.welink.game.FiveChessView$2 -> com.fived.welink.game.e:
    com.fived.welink.game.FiveChessView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fived.welink.game.FiveChessView$3 -> com.fived.welink.game.f:
    com.fived.welink.game.FiveChessView this$0 -> a
    void run() -> run
com.fived.welink.game.FiveChessView$4 -> com.fived.welink.game.g:
    com.fived.welink.game.FiveChessView this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.game.GameInfo -> com.fived.welink.game.h:
com.fived.welink.welcome.HelpActivity -> com.fived.welink.welcome.HelpActivity:
    android.support.v4.view.ViewPager mViewPager -> a
    android.widget.ImageView mPage0 -> b
    android.widget.ImageView mPage1 -> c
    android.widget.ImageView mPage2 -> d
    android.widget.ImageView mPage3 -> e
    android.widget.ImageView mPage4 -> f
    android.widget.ImageView mPage5 -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.ImageView access$0(com.fived.welink.welcome.HelpActivity) -> a
    android.widget.ImageView access$1(com.fived.welink.welcome.HelpActivity) -> b
    android.widget.ImageView access$2(com.fived.welink.welcome.HelpActivity) -> c
    android.widget.ImageView access$3(com.fived.welink.welcome.HelpActivity) -> d
    android.widget.ImageView access$4(com.fived.welink.welcome.HelpActivity) -> e
    android.widget.ImageView access$5(com.fived.welink.welcome.HelpActivity) -> f
com.fived.welink.welcome.HelpActivity$1 -> com.fived.welink.welcome.a:
    com.fived.welink.welcome.HelpActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.welcome.HelpActivity$MyOnPageChangeListener -> com.fived.welink.welcome.b:
    com.fived.welink.welcome.HelpActivity this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.fived.welink.welcome.HelpPagerAdapter -> com.fived.welink.welcome.c:
    java.util.ArrayList views -> a
    java.util.ArrayList titles -> b
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
com.fived.welink.welcome.StartActivity -> com.fived.welink.welcome.StartActivity:
    android.widget.ImageView imageView -> a
    android.widget.TextView textView -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
com.fived.welink.welcome.StartActivity$MyAsynTask -> com.fived.welink.welcome.d:
    com.fived.welink.welcome.StartActivity this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fived.welink.wifidirect.DeviceListFragment -> com.fived.welink.wifidirect.DeviceListFragment:
    java.util.List peers -> d
    java.util.List peers_tmp -> e
    int[] images -> f
    android.widget.Gallery gallery -> g
    android.widget.ImageButton ibtnhead -> h
    android.widget.Button btname -> i
    android.app.ProgressDialog progressDialog -> a
    android.view.View mContentView -> b
    android.widget.Button btnCancel -> c
    android.widget.ImageView ivperson -> j
    android.net.wifi.p2p.WifiP2pDevice device -> k
    com.fived.welink.dataproc.DBHelper db -> l
    android.app.Dialog alertDialog -> m
    android.widget.EditText etchangename -> n
    android.widget.Toast toast -> o
    android.database.sqlite.SQLiteDatabase sqlite_write -> p
    android.database.sqlite.SQLiteDatabase sqlite_read -> q
    android.widget.ListView lv -> r
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void getDatabasePeers(java.util.List) -> a
    void getDatabasePeers() -> g
    boolean Check(java.lang.String) -> a
    boolean IsOnline(java.lang.String) -> b
    void DeleteSomeone(java.lang.String) -> c
    void SetImagenum(int) -> b
    void SetName(java.lang.String) -> d
    java.lang.String GetNameInfo(java.lang.String) -> e
    int GetImgInfo(java.lang.String) -> f
    java.lang.String GetMyName() -> a
    int GetMyImg() -> b
    java.lang.String GetMyAddress() -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void SetLvListener() -> h
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void CreateDialog() -> i
    android.net.wifi.p2p.WifiP2pDevice getDevice() -> d
    java.lang.String getDeviceStatus(int) -> c
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void updateThisDevice(android.net.wifi.p2p.WifiP2pDevice) -> a
    void onDestroyView() -> onDestroyView
    void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList) -> onPeersAvailable
    void clearPeers() -> e
    void onInitiateDiscovery() -> f
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int[] access$0(com.fived.welink.wifidirect.DeviceListFragment) -> a
    void access$1(com.fived.welink.wifidirect.DeviceListFragment,android.widget.ImageView) -> a
    android.widget.ImageView access$2(com.fived.welink.wifidirect.DeviceListFragment) -> b
    boolean access$3(com.fived.welink.wifidirect.DeviceListFragment,java.lang.String) -> a
    int access$4(com.fived.welink.wifidirect.DeviceListFragment,java.lang.String) -> b
    java.lang.String access$5(com.fived.welink.wifidirect.DeviceListFragment,java.lang.String) -> c
    java.lang.String access$6(int) -> a
    void access$7(com.fived.welink.wifidirect.DeviceListFragment,android.widget.Gallery) -> a
    android.widget.Gallery access$8(com.fived.welink.wifidirect.DeviceListFragment) -> c
    android.widget.EditText access$9(com.fived.welink.wifidirect.DeviceListFragment) -> d
    android.widget.Button access$10(com.fived.welink.wifidirect.DeviceListFragment) -> e
    android.app.Dialog access$11(com.fived.welink.wifidirect.DeviceListFragment) -> f
    void access$12(com.fived.welink.wifidirect.DeviceListFragment,java.lang.String) -> d
    android.widget.Toast access$13(com.fived.welink.wifidirect.DeviceListFragment) -> g
    void access$14(com.fived.welink.wifidirect.DeviceListFragment,android.widget.Toast) -> a
com.fived.welink.wifidirect.DeviceListFragment$1 -> com.fived.welink.wifidirect.a:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.wifidirect.DeviceListFragment$1$1 -> com.fived.welink.wifidirect.b:
    com.fived.welink.wifidirect.DeviceListFragment$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.wifidirect.DeviceListFragment$2 -> com.fived.welink.wifidirect.c:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.wifidirect.DeviceListFragment$3 -> com.fived.welink.wifidirect.d:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.fived.welink.wifidirect.DeviceListFragment$4 -> com.fived.welink.wifidirect.e:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.wifidirect.DeviceListFragment$5 -> com.fived.welink.wifidirect.f:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fived.welink.wifidirect.DeviceListFragment$6 -> com.fived.welink.wifidirect.g:
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.fived.welink.wifidirect.DeviceListFragment$DeviceActionListener -> com.fived.welink.wifidirect.h:
    void showDetails(android.net.wifi.p2p.WifiP2pDevice) -> a
    void cancelDisconnect() -> a
    void disconnect() -> b
com.fived.welink.wifidirect.DeviceListFragment$ImageAdapter -> com.fived.welink.wifidirect.i:
    int mGalleryItemBackground -> b
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fived.welink.wifidirect.DeviceListFragment$WiFiPeerListAdapter -> com.fived.welink.wifidirect.j:
    java.util.List items -> b
    com.fived.welink.wifidirect.DeviceListFragment this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void insert(android.net.wifi.p2p.WifiP2pDevice,int) -> a
    void remove(android.net.wifi.p2p.WifiP2pDevice) -> a
    void insert(java.lang.Object,int) -> insert
    void remove(java.lang.Object) -> remove
    com.fived.welink.wifidirect.DeviceListFragment access$2(com.fived.welink.wifidirect.DeviceListFragment$WiFiPeerListAdapter) -> a
com.fived.welink.wifidirect.DeviceListFragment$WiFiPeerListAdapter$1 -> com.fived.welink.wifidirect.k:
    com.fived.welink.wifidirect.DeviceListFragment$WiFiPeerListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.fived.welink.wifidirect.WiFiDirectActivity -> com.fived.welink.wifidirect.WiFiDirectActivity:
    android.net.wifi.p2p.WifiP2pManager manager -> c
    android.net.wifi.p2p.WifiP2pInfo info -> d
    android.net.wifi.p2p.WifiP2pDevice device -> a
    boolean isWifiP2pEnabled -> e
    boolean retryChannel -> f
    android.app.ProgressDialog progressDialog -> b
    android.content.IntentFilter intentFilter -> g
    android.net.wifi.p2p.WifiP2pManager$Channel channel -> h
    android.content.BroadcastReceiver receiver -> i
    android.widget.Button btnSearch -> j
    android.widget.Toast toast -> k
    java.lang.String mClientId -> l
    com.baidu.cloudsdk.social.share.ShareContent mPageContent -> m
    void setIsWifiP2pEnabled(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void showPopup(android.view.View) -> showPopup
    void resetData() -> c
    void showDetails(android.net.wifi.p2p.WifiP2pDevice) -> a
    void connect(android.net.wifi.p2p.WifiP2pConfig) -> a
    void disconnect() -> b
    void onChannelDisconnected() -> onChannelDisconnected
    void cancelDisconnect() -> a
    void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo) -> onConnectionInfoAvailable
    void onDestroy() -> onDestroy
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean access$0(com.fived.welink.wifidirect.WiFiDirectActivity) -> a
    android.widget.Toast access$1(com.fived.welink.wifidirect.WiFiDirectActivity) -> b
    void access$2(com.fived.welink.wifidirect.WiFiDirectActivity,android.widget.Toast) -> a
    android.net.wifi.p2p.WifiP2pManager access$3(com.fived.welink.wifidirect.WiFiDirectActivity) -> c
    android.net.wifi.p2p.WifiP2pManager$Channel access$4(com.fived.welink.wifidirect.WiFiDirectActivity) -> d
com.fived.welink.wifidirect.WiFiDirectActivity$1 -> com.fived.welink.wifidirect.l:
    com.fived.welink.wifidirect.WiFiDirectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fived.welink.wifidirect.WiFiDirectActivity access$0(com.fived.welink.wifidirect.WiFiDirectActivity$1) -> a
com.fived.welink.wifidirect.WiFiDirectActivity$1$1 -> com.fived.welink.wifidirect.m:
    com.fived.welink.wifidirect.WiFiDirectActivity$1 this$1 -> a
    void onSuccess() -> onSuccess
    void onFailure(int) -> onFailure
com.fived.welink.wifidirect.WiFiDirectActivity$2 -> com.fived.welink.wifidirect.n:
    com.fived.welink.wifidirect.WiFiDirectActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int) -> onFailure
com.fived.welink.wifidirect.WiFiDirectActivity$3 -> com.fived.welink.wifidirect.o:
    com.fived.welink.wifidirect.WiFiDirectActivity this$0 -> a
    void onFailure(int) -> onFailure
    void onSuccess() -> onSuccess
com.fived.welink.wifidirect.WiFiDirectActivity$4 -> com.fived.welink.wifidirect.p:
    com.fived.welink.wifidirect.WiFiDirectActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int) -> onFailure
com.fived.welink.wifidirect.WiFiDirectActivity$5 -> com.fived.welink.wifidirect.q:
    com.fived.welink.wifidirect.WiFiDirectActivity this$0 -> a
    void onError(com.baidu.cloudsdk.BaiduException) -> a
    void onComplete(org.json.JSONArray) -> a
    void onComplete(org.json.JSONObject) -> a
    void onComplete() -> a
    void onCancel() -> b
com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver -> com.fived.welink.wifidirect.r:
    android.net.wifi.p2p.WifiP2pDevice device -> a
    android.net.wifi.p2p.WifiP2pManager manager -> b
    android.net.wifi.p2p.WifiP2pManager$Channel channel -> c
    com.fived.welink.wifidirect.WiFiDirectActivity activity -> d
    android.widget.Toast toast -> e
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    android.widget.Toast access$0(com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver) -> a
    com.fived.welink.wifidirect.WiFiDirectActivity access$1(com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver) -> b
    void access$2(com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver,android.widget.Toast) -> a
com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver$1 -> com.fived.welink.wifidirect.s:
    com.fived.welink.wifidirect.WiFiDirectBroadcastReceiver this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int) -> onFailure
com.sina.sso.RemoteSSO -> com.a.a.a:
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
com.sina.sso.RemoteSSO$Stub -> com.a.a.b:
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$a -> com.a.a.c:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
d -> as:
    org.apache.http.impl.client.AbstractHttpClient a -> a
    org.apache.http.protocol.HttpContext b -> b
    org.apache.http.client.methods.HttpUriRequest c -> c
    com.baidu.cloudsdk.common.http.HttpResponseHandler d -> d
    boolean e -> e
    void run() -> run
    void a() -> a
e -> at:
    char[] a -> a
    java.io.ByteArrayOutputStream b -> b
    java.lang.String c -> c
    boolean d -> d
    boolean e -> e
    byte[] f -> f
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean) -> a
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    void a() -> a
    void b() -> b
f -> au:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
g -> av:
    f a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
h -> aw:
    java.lang.String a -> a
    i b -> b
    int c -> c
    int d -> d
    java.util.Map e -> e
    android.graphics.Bitmap b(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    int a(android.graphics.Bitmap) -> a
    java.lang.String c(java.lang.String) -> b
i -> ax:
    void a(java.lang.String,android.graphics.Bitmap) -> a
j -> ay:
    android.net.Uri a -> a
    java.lang.String b -> b
    com.baidu.cloudsdk.common.imgloader.AsyncImageLoader$IAsyncImageLoaderListener c -> c
    com.baidu.cloudsdk.common.imgloader.ImageManager d -> d
    void onComplete(android.graphics.Bitmap) -> a
k -> az:
    com.baidu.cloudsdk.common.util.CoordinateManager a -> a
    void run() -> run
l -> ba:
    com.baidu.cloudsdk.common.util.CoordinateManager$a a -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
n -> bb:
    com.baidu.cloudsdk.social.core.PositionManager a -> a
    void run() -> run
o -> bc:
    com.baidu.cloudsdk.social.core.PositionManager$a a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
q -> bd:
    void a() -> a
    void a(int,int,android.content.Intent) -> a
    android.content.Intent b() -> b
    java.lang.String c() -> c
    int d() -> d
r -> be:
    java.lang.String e -> e
    java.lang.String f -> f
    android.content.ServiceConnection g -> g
    void a() -> a
    void a(int,int,android.content.Intent) -> a
    boolean h() -> h
    android.content.Intent b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String a(r,java.lang.String) -> a
    java.lang.String b(r,java.lang.String) -> b
    android.content.ServiceConnection a(r) -> a
s -> bf:
    r a -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
t -> bg:
    com.baidu.cloudsdk.social.oauth.SocialOAuthActivity a -> a
    void onError(com.baidu.cloudsdk.BaiduException) -> a
    void onComplete() -> a
    void onComplete(org.json.JSONObject) -> a
    void onComplete(org.json.JSONArray) -> a
    void onCancel() -> b
u -> bh:
    java.lang.String a -> a
    android.view.ViewGroup$LayoutParams b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.cloudsdk.IBaiduListener f -> f
    android.app.ProgressDialog g -> g
    android.webkit.WebView h -> h
    android.widget.LinearLayout i -> i
    com.baidu.cloudsdk.social.oauth.SocialConfig j -> j
    void dismiss() -> dismiss
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void b() -> b
    void c() -> c
    void onBackPressed() -> onBackPressed
    boolean a(java.lang.String) -> a
    android.app.ProgressDialog a(u) -> a
    android.webkit.WebView b(u) -> b
    android.widget.LinearLayout c(u) -> c
    boolean a(u,java.lang.String) -> a
    com.baidu.cloudsdk.IBaiduListener d(u) -> d
u$a -> bi:
    u a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
u$b -> bj:
    u a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
v -> bk:
    u a -> a
    void onClick(android.view.View) -> onClick
w -> bl:
    com.baidu.cloudsdk.social.oauth.SocialOAuthActivity a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.cloudsdk.IBaiduListener d -> d
    void a() -> a
    void a(int,int,android.content.Intent) -> a
    void e() -> e
    void f() -> f
    java.lang.String b() -> b
x -> bm:
    com.baidu.cloudsdk.social.oauth.SocialOAuthActivity a -> a
    java.lang.String b -> b
    com.baidu.cloudsdk.IBaiduListener c -> c
    w a(java.lang.String) -> a
x$1 -> bn:
    int[] a -> a
y -> bo:
    com.baidu.cloudsdk.common.http.AsyncHttpClient e -> e
    void e() -> e
    boolean g() -> g
    boolean a(android.content.Intent,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Intent b() -> b
    java.lang.String c() -> c
    int d() -> d
z -> bp:
    com.baidu.cloudsdk.social.share.ShareContent a(android.os.Parcel) -> a
    com.baidu.cloudsdk.social.share.ShareContent[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
